--- Available filters and text transformations: colorize, debug, default, direct, esp32_exception_decoder, hexlify, log2file, nocontrol, printable, send_on_enter, time
--- More details at https://bit.ly/pio-monitor-filters
[  3934][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 8 0x08
[  3934][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  3939][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  3947][I][BLEDevice.cpp:253] gapEventHandler(): ESP_GAP_BLE_AUTH_CMPL_EVT
[  3953][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  3959][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 8]
[  4050][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[  4051][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[  4056][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[  4064][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[  4072][D][BLEServer.cpp:359] onConnect(): BLEServerCallbacks
[  4078][D][BLEServer.cpp:360] onConnect(): BLEServerCallbacks
[  4083][D][BLEServer.cpp:361] onConnect(): BLEServerCallbacks
[  4089][I][esp32notifications.cpp:46] onConnect(): Device connected
[  4095][I][ancs_ble_client.cpp:66] startClientTask(): Starting client
[  4101][I][ancs_ble_client.cpp:84] setup(): !! Setup Begin !!
[  4107][V][BLEDevice.cpp:60] createClient(): >> createClient
[  4112][V][BLEDevice.cpp:66] createClient(): << createClient
[  4118][I][ancs_ble_client.cpp:96] setup(): !! Setup Connect !!
[  4123][V][BLEClient.cpp:98] connect(): >> connect(01:50:90:28:31:7a)
[  4131][I][BLEDevice.cpp:622] addPeerDevice(): add conn_id: 1, GATT role: client
[  4137][V][FreeRTOS.cpp:189] take(): Semaphore taking: name: RegEvt (0x3ffdd5fc), owner: <N/A> for connect
[  4146][V][FreeRTOS.cpp:198] take(): Semaphore taken:  name: RegEvt (0x3ffdd5fc), owner: connect
[  4155][V][FreeRTOS.cpp:63] wait(): >> wait: Semaphore waiting: name: RegEvt (0x3ffdd5fc), owner: connect for connect
[  5095][I][esp32notifications.cpp:56] onConnect(): Set up client
StateConnected - connected to a phone or tablet
[  5096][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[  5103][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[  5111][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[  5118][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[  5126][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[  5134][D][BLEServer.cpp:378] onMtuChanged(): BLEServerCallbacks
[  5140][D][BLEServer.cpp:379] onMtuChanged(): BLEServerCallbacks
[  5145][D][BLEServer.cpp:380] onMtuChanged(): BLEServerCallbacks
[  5151][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[  5159][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 0
[  5159][D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[  5176][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 0
[  5176][V][BLEUtils.cpp:1283] dumpGattClientEvent(): GATT Event: Unknown
[  5191][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 0
[  5191][D][BLEClient.cpp:180] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[  5209][V][FreeRTOS.cpp:143] give(): Semaphore giving: name: RegEvt (0x3ffdd5fc), owner: connect
[  5218][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 40
[  5218][D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[  5236][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 40
[  5236][V][BLEUtils.cpp:1283] dumpGattClientEvent(): GATT Event: Unknown
[  5251][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 40
[  5251][D][BLEClient.cpp:180] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[  5269][V][FreeRTOS.cpp:77] wait(): << wait: Semaphore released: name: RegEvt (0x3ffdd5fc), owner: <N/A>
[  5278][V][FreeRTOS.cpp:189] take(): Semaphore taking: name: OpenEvt (0x3ffdd660), owner: <N/A> for connect
[  5287][V][FreeRTOS.cpp:198] take(): Semaphore taken:  name: OpenEvt (0x3ffdd660), owner: connect
[  5302][V][BLEClient.cpp:142] connect(): CONNECT SEMA WAIT START
[  5302][V][FreeRTOS.cpp:63] wait(): >> wait: Semaphore waiting: name: OpenEvt (0x3ffdd660), owner: connect for connect
[ 16108][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[ 16109][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[ 16114][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[ 16123][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[ 16130][I][esp32notifications.cpp:67] onDisconnect(): Device disconnected
StateDisconnected - disconnected from a phone or tablet
[ 16147][I][esp32notifications.cpp:148] startAdvertising(): startAdvertising()
[ 16149][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[ 16155][V][BLEAdvertising.cpp:262] stop(): >> stop
[ 16159][V][BLEAdvertising.cpp:268] stop(): << stop
[ 16164][V][BLEAdvertising.cpp:153] setAdvertisementData(): >> setAdvertisementData
[ 16171][V][BLEAdvertising.cpp:161] setAdvertisementData(): << setAdvertisementData
[ 16179][V][BLEAdvertising.cpp:187] start(): >> start: customAdvData: 1, customScanResponseData: 0
[ 16187][D][BLEAdvertising.cpp:206] start(): - no services advertised
[ 16194][V][BLEAdvertising.cpp:252] start(): << start
[ 16198][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[ 16206][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 41
[ 16206][D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[ 16224][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 41
[ 16224][V][BLEUtils.cpp:1283] dumpGattClientEvent(): GATT Event: Unknown
[ 16238][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 41
[ 16238][D][BLEClient.cpp:180] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[ 16261][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 17 0x11
[ 16261][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[ 16275][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[ 16281][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[ 16287][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[ 16293][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 17]
[ 16300][I][BLEAdvertising.cpp:522] handleGAPEvent(): STOP advertising
[ 16307][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 4 0x04
[ 16307][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[ 16323][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[ 16330][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[ 16337][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[ 16343][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 4]
[ 16351][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 1 0x01
[ 16351][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[ 16367][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[ 16374][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[ 16381][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[ 16387][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 1]
[ 16394][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 6 0x06
[ 16394][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[ 16410][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[ 16418][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[ 16425][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[ 16431][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 6]
ets Jun  8 2016 00:22:57

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:1184
load:0x40078000,len:12776
load:0x40080400,len:3032
entry 0x400805e4
[␀␘␂␂␂��m␑um����2-hal-cpu.c:211] setCpuFrequencyMhz(): PLL: 480 / 2 = 240 Mhz, APB: 80000000 Hz
[    41][I][esp32notifications.cpp:104] begin(): begin()
[   770][V][BLEDevice.cpp:76] createServer(): >> createServer
[   771][V][BLEServer.cpp:290] registerApp(): >> registerApp - 0
[   771][V][FreeRTOS.cpp:189] take(): Semaphore taking: name: RegisterAppEvt (0x3ffce02c), owner: <N/A> for registerApp
[   781][V][FreeRTOS.cpp:198] take(): Semaphore taken:  name: RegisterAppEvt (0x3ffce02c), owner: registerApp
[   791][V][FreeRTOS.cpp:63] wait(): >> wait: Semaphore waiting: name: RegisterAppEvt (0x3ffce02c), owner: registerApp for registerApp
[   792][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[   812][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[   819][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[   827][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[   835][V][FreeRTOS.cpp:143] give(): Semaphore giving: name: RegisterAppEvt (0x3ffce02c), owner: registerApp
[   845][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[   845][V][FreeRTOS.cpp:77] wait(): << wait: Semaphore released: name: RegisterAppEvt (0x3ffce02c), owner: <N/A>
[   862][V][BLEServer.cpp:294] registerApp(): << registerApp
[   867][V][BLEDevice.cpp:83] createServer(): << createServer
[   873][I][esp32notifications.cpp:148] startAdvertising(): startAdvertising()
[   880][I][BLEDevice.cpp:577] getAdvertising(): create advertising
[   885][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[   891][V][BLEAdvertising.cpp:153] setAdvertisementData(): >> setAdvertisementData
[   899][V][BLEAdvertising.cpp:161] setAdvertisementData(): << setAdvertisementData
[   903][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 4 0x04
[   906][V][BLEAdvertising.cpp:187] start(): >> start: customAdvData: 1, customScanResponseData: 0
[   903][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[   923][D][BLEAdvertising.cpp:206] start(): - no services advertised
[   931][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[   937][V][BLEAdvertising.cpp:252] start(): << start
[   944][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[   955][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 4]
[   968][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 1 0x01
[   967][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[   980][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[   986][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[   992][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 1]
[   999][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 6 0x06
[   999][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  1015][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  1022][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  1028][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 6]
[  1339][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[  1340][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[  1345][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[  1354][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[  1362][D][BLEServer.cpp:359] onConnect(): BLEServerCallbacks
[  1367][D][BLEServer.cpp:360] onConnect(): BLEServerCallbacks
[  1373][D][BLEServer.cpp:361] onConnect(): BLEServerCallbacks
[  1378][I][esp32notifications.cpp:46] onConnect(): Device connected
[  1384][I][ancs_ble_client.cpp:66] startClientTask(): Starting client
[  1390][I][ancs_ble_client.cpp:84] setup(): !! Setup Begin !!
[  1396][V][BLEDevice.cpp:60] createClient(): >> createClient
[  1402][V][BLEDevice.cpp:66] createClient(): << createClient
[  1407][I][ancs_ble_client.cpp:96] setup(): !! Setup Connect !!
[  1413][V][BLEClient.cpp:98] connect(): >> connect(01:50:90:28:31:7a)
[  1419][I][BLEDevice.cpp:622] addPeerDevice(): add clld_pdu_get_tx_flush_nb HCI packet count mismatch (0, 1)
onn_id: 1, GATT role: client
[  1432][V][FreeRTOS.cpp:189] take(): Semaphore taking: name: RegEvt (0x3ffdd5f0), owner: <N/A> for connect
[  1441][V][FreeRTOS.cpp:198] take(): Semaphore taken:  name: RegEvt (0x3ffdd5f0), owner: connect
[  1449][V][FreeRTOS.cpp:63] wait(): >> wait: Semaphore waiting: name: RegEvt (0x3ffdd5f0), owner: connect for connect
[  2384][I][esp32notifications.cpp:56] onConnect(): Set up client
StateConnected - connected to a phone or tablet
[  2385][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[  2391][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[  2400][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[  2407][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[  2415][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[  2423][I][esp32notifications.cpp:67] onDisconnect(): Device disconnected
StateDisconnected - disconnected from a phone or tablet
[  2440][I][esp32notifications.cpp:148] startAdvertising(): startAdvertising()
[  2442][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  2447][V][BLEAdvertising.cpp:262] stop(): >> stop
[  2452][V][BLEAdvertising.cpp:268] stop(): << stop
[  2457][V][BLEAdvertising.cpp:153] setAdvertisementData(): >> setAdvertisementData
[  2464][V][BLEAdvertising.cpp:161] setAdvertisementData(): << setAdvertisementData
[  2472][V][BLEAdvertising.cpp:187] start(): >> start: customAdvData: 1, customScanResponseData: 0
[  2480][D][BLEAdvertising.cpp:206] start(): - no services advertised
[  2486][V][BLEAdvertising.cpp:252] start(): << start
[  2491][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[  2500][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 0
[  2500][D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[  2518][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 0
[  2518][V][BLEUtils.cpp:1283] dumpGattClientEvent(): GATT Event: Unknown
[  2531][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 0
[  2531][D][BLEClient.cpp:180] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[  2549][V][FreeRTOS.cpp:143] give(): Semaphore giving: name: RegEvt (0x3ffdd5f0), owner: connect
[  2558][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 17 0x11
[  2557][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  2574][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  2581][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[  2588][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  2594][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 17]
[  2601][I][BLEAdvertising.cpp:522] handleGAPEvent(): STOP advertising
[  2608][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 4 0x04
[  2608][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  2624][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  2631][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[  2639][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  2644][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 4]
[  2652][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 1 0x01
[  2652][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  2668][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  2675][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[  2682][D][BLEDeGuru Meditation Error: Core  1 panic'ed (Interrupt wdt timeout on CPU1). 

Core  1 register dump:
PC      : 0x400d5e31  PS      : 0x00060635  A0      : 0x40084610  A1      : 0x3ffbedec  
A2      : 0x3ffb7514  A3      : 0x3ffbdb8c  A4      : 0x00000000  A5      : 0x00000000  
A6      : 0x00000002  A7      : 0x00000008  A8      : 0x00004000  A9      : 0x3ff40000  
A10     : 0x00040101  A11     : 0x3ffbee10  A12     : 0x00000000  A13     : 0x3ffbc49c  
A14     : 0x00060021  A15     : 0x00000000  SAR     : 0x0000001b  EXCCAUSE: 0x00000006  
EXCVADDR: 0x00000000  LBEG    : 0x00000000  LEND    : 0x00000000  LCOUNT  : 0x00000000  
Core  1 was running in ISR context:
EPC1    : 0x400ddd07  EPC2    : 0x00000000  EPC3    : 0x00000000  EPC4    : 0x00000000


Backtrace:0x400d5e2e:0x3ffbedec |<-CORRUPTED


Core  0 register dump:
PC      : 0x4000921f  PS      : 0x00060b35  A0      : 0x80007d16  A1      : 0x3ffcd800  
A2      : 0x69804000  A3      : 0x3ffcd820  A4      : 0x00000015  A5      : 0x0000ff00  
A6      : 0x00000015  A7      : 0x3ffcd744  A8      : 0x3ff40000  A9      : 0x00000076  
A10     : 0x00800000  A11     : 0x3ff4001c  A12     : 0x00000015  A13     : 0x3ffda1d8  
A14     : 0x00060920  A15     : 0x00000001  SAR     : 0x00000004  EXCCAUSE: 0x00000006  
EXCVADDR: 0x00000000  LBEG    : 0x40090319  LEND    : 0x40090329  LCOUNT  : 0xfffffffc  


Backtrace:0x4000921c:0x3ffcd8000x40007d13:0x3ffcd820 0x40007c69:0x3ffcd840 0x40008106:0x3ffcd860 0x400d54fc:0x3ffcd8f0 0x40161cd1:0x3ffcd950 0x40161efa:0x3ffcd970 0x400e3571:0x3ffcd9c0 0x4010774d:0x3ffcd9e0 0x40109527:0x3ffcda00 




ELF file SHA256: 0000000000000000

Rebooting...
ets Jun  8 2016 00:22:57

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:1184
load:0x40078000,len:12776
load:0x40080400,len:3032
entry 0x400805e4
[␀␘␂␂␂��m␑um����2-hal-cpu.c:211] setCpuFrequencyMhz(): PLL: 480 / 2 = 240 Mhz, APB: 80000000 Hz
[    41][I][esp32notifications.cpp:104] begin(): begin()
[   778][V][BLEDevice.cpp:76] createServer(): >> createServer
[   779][V][BLEServer.cpp:290] registerApp(): >> registerApp - 0
[   779][V][FreeRTOS.cpp:189] take(): Semaphore taking: name: RegisterAppEvt (0x3ffce02c), owner: <N/A> for registerApp
[   789][V][FreeRTOS.cpp:198] take(): Semaphore taken:  name: RegisterAppEvt (0x3ffce02c), owner: registerApp
[   799][V][FreeRTOS.cpp:63] wait(): >> wait: Semaphore waiting: name: RegisterAppEvt (0x3ffce02c), owner: registerApp for registerApp
[   800][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[   820][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[   827][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[   835][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[   843][V][FreeRTOS.cpp:143] give(): Semaphore giving: name: RegisterAppEvt (0x3ffce02c), owner: registerApp
[   853][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[   853][V][FreeRTOS.cpp:77] wait(): << wait: Semaphore released: name: RegisterAppEvt (0x3ffce02c), owner: <N/A>
[   870][V][BLEServer.cpp:294] registerApp(): << registerApp
[   875][V][BLEDevice.cpp:83] createServer(): << createServer
[   881][I][esp32notifications.cpp:148] startAdvertising(): startAdvertising()
[   888][I][BLEDevice.cpp:577] getAdvertising(): create advertising
[   893][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[   899][V][BLEAdvertising.cpp:153] setAdvertisementData(): >> setAdvertisementData
[   907][V][BLEAdvertising.cpp:161] setAdvertisementData(): << setAdvertisementData
[   911][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 4 0x04
[   914][V][BLEAdvertising.cpp:187] start(): >> start: customAdvData: 1, customScanResponseData: 0
[   911][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[   931][D][BLEAdvertising.cpp:206] start(): - no services advertised
[   939][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[   945][V][BLEAdvertising.cpp:252] start(): << start
[   952][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[   963][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 4]
[   975][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 1 0x01
[   975][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[   988][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[   994][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  1000][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 1]
[  1007][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 6 0x06
[  1007][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  1023][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  1030][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  1036][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 6]
[  2466][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[  2467][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[  2472][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[  2480][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[  2488][D][BLEServer.cpp:359] onConnect(): BLEServerCallbacks
[  2493][D][BLEServer.cpp:360] onConnect(): BLEServerCallbacks
[  2499][D][BLEServer.cpp:361] onConnect(): BLEServerCallbacks
[  2505][I][esp32notifications.cpp:46] onConnect(): Device connected
[  2511][I][ancs_ble_client.cpp:66] startClientTask(): Starting client
[  2517][I][ancs_ble_client.cpp:84] setup(): !! Setup Begin !!
[  2523][V][BLEDevice.cpp:60] createClient(): >> createClient
[  2528][V][BLEDevice.cpp:66] createClient(): << createClient
[  2534][I][ancs_ble_client.cpp:96] setup(): !! Setup Connect !!
[  2539][V][BLEClient.cpp:98] connect(): >> connect(01:50:90:28:31:7a)
[  2545][I][BLEDevice.cpp:622] addPeerDevice(): add conn_id: 1, GATT role: client
[  2553][V][FreeRTOS.cpp:189] take(): Semaphore taking: name: RegEvt (0x3ffdd600), owner: <N/A> for connect
[  2562][V][FreeRTOS.cpp:198] take(): Semaphore taken:  name: RegEvt (0x3ffdd600), owner: connect
[  2571][V][FreeRTOS.cpp:63] wait(): >> wait: Semaphore waiting: name: RegEvt (0x3ffdd600), owner: connect for connect
[  3510][I][esp32notifications.cpp:56] onConnect(): Set up client
StateConnected - connected to a phone or tablet
[  3511][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[  3523][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[  3526][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[  3533][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[  3542][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[  3550][D][BLEServer.cpp:378] onMtuChanged(): BLEServerCallbacks
[  3555][D][BLEServer.cpp:379] onMtuChanged(): BLEServerCallbacks
[  3561][D][BLEServer.cpp:380] onMtuChanged(): BLEServerCallbacks
[  3567][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[  3580][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 0
[  3580][D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[  3646][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 0
[  3646][V][BLEUtils.cpp:1283] dumpGattClientEvent(): GATT Event: Unknown
[  3650][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 0
[  3650][D][BLEClient.cpp:180] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[  3668][V][FreeRTOS.cpp:143] give(): Semaphore giving: name: RegEvt (0x3ffdd600), owner: connect
[  3677][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 40
[  3677][D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[  3695][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 40
[  3695][V][BLEUtils.cpp:1283] dumpGattClientEvent(): GATT Event: Unknown
[  3710][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 40
[  3710][D][BLEClient.cpp:180] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[  3728][V][FreeRTOS.cpp:77] wait(): << wait: Semaphore released: name: RegEvt (0x3ffdd600), owner: <N/A>
[  3737][V][FreeRTOS.cpp:189] take(): Semaphore taking: name: OpenEvt (0x3ffdd664), owner: <N/A> for connect
[  3747][V][FreeRTOS.cpp:198] take(): Semaphore taken:  name: OpenEvt (0x3ffdd664), owner: connect
[  3758][V][BLEClient.cpp:142] connect(): CONNECT SEMA WAIT START
[  3762][V][FreeRTOS.cpp:63] wait(): >> wait: Semaphore waiting: name: OpenEvt (0x3ffdd664), owner: connect for connect
[  5945][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 9 0x09
[  5945][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  5950][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  5958][D][BLEDevice.cpp:247] gapEventHandler(): ESP_GAP_BLE_KEY_EVT
[  5964][I][BLEDevice.cpp:249] gapEventHandler(): key type = ESP_LE_KEY_LENC
[  5971][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[  5978][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  5984][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 9]
[  5991][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 9 0x09
[  5991][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  6007][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  6015][D][BLEDevice.cpp:247] gapEventHandler(): ESP_GAP_BLE_KEY_EVT
[  6021][I][BLEDevice.cpp:249] gapEventHandler(): key type = ESP_LE_KEY_PENC
[  6028][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[  6035][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  6041][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 9]
[  6048][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 9 0x09
[  6048][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  6065][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  6071][D][BLEDevice.cpp:247] gapEventHandler(): ESP_GAP_BLE_KEY_EVT
[  6078][I][BLEDevice.cpp:249] gapEventHandler(): key type = ESP_LE_KEY_LID
[  6084][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[  6092][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  6097][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 9]
[  6105][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 9 0x09
[  6105][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  6121][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  6128][D][BLEDevice.cpp:247] gapEventHandler(): ESP_GAP_BLE_KEY_EVT
[  6134][I][BLEDevice.cpp:249] gapEventHandler(): key type = ESP_LE_KEY_PID
[  6141][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[  6148][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  6154][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 9]
[  6188][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 8 0x08
[  6188][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  6194][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  6201][I][BLEDevice.cpp:253] gapEventHandler(): ESP_GAP_BLE_AUTH_CMPL_EVT
[  6208][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[  6215][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  6220][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 8]
[ 33764][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[ 33765][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[ 33770][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[ 33778][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[ 33786][I][esp32notifications.cpp:67] onDisconnect(): Device disconnected
StateDisconnected - disconnected from a phone or tablet
[ 33803][I][esp32notifications.cpp:148] startAdvertising(): startAdvertising()
[ 33805][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[ 33811][V][BLEAdvertising.cpp:262] stop(): >> stop
[ 33815][V][BLEAdvertising.cpp:268] stop(): << stop
[ 33820][V][BLEAdvertising.cpp:153] setAdvertisementData(): >> setAdvertisementData
[ 33827][V][BLEAdvertising.cpp:161] setAdvertisementData(): << setAdvertisementData
[ 33835][V][BLEAdvertising.cpp:187] start(): >> start: customAdvData: 1, customScanResponseData: 0
[ 33843][D][BLEAdvertising.cpp:206] start(): - no services advertised
[ 33849][V][BLEAdvertising.cpp:252] start(): << start
[ 33854][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[ 33861][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 41
[ 33861][D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[ 33879][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 41
[ 33879][V][BLEUtils.cpp:1283] dumpGattClientEvent(): GATT Event: Unknown
[ 33894][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 41
[ 33894][D][BLEClient.cpp:180] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[ 33912][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 2
[ 33912][D][BLEDevice.cpp:148] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[ 33930][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 2
[ 33930][V][BLEUtils.cpp:1283] dumpGattClientEvent(): GATT Event: Unknown
[ 33945][V][BLEUtils.cpp:951] gattClientEventTypeToString(): Unknown GATT Client event type: 2
[ 33945][D][BLEClient.cpp:180] gattClientEventHandler(): gattClientEventHandler [esp_gatt_if: 5] ... Unknown
[ 33963][E][BLEClient.cpp:241] gattClientEventHandler(): Failed to connect, status=Unknown ESP_ERR error
[ 33972][V][FreeRTOS.cpp:143] give(): Semaphore giving: name: OpenEvt (0x3ffdd664), owner: connect
[ 33992][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 17 0x11
[ 33992][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[ 33997][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[ 34005][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[ 34012][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[ 34018][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 17]
[ 34025][I][BLEAdvertising.cpp:522] handleGAPEvent(): STOP advertising
[ 34031][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 4 0x04
[ 34031][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[ 34047][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[ 34055][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[ 34062][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[ 34068][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 4]
[ 34075][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 1 0x01
[ 34075][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[ 34091][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[ 34099][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[ 34107][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[ 34112][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 1]
[ 34119][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 6 0x06
[ 34119][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[ 34135][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[ 34143][D][BLEClient.cpp:495] handleGAPEvent(): BLEClient ... handling GAP event!
[ 34150][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[ 34156][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 6]
[265297][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[265298][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[265303][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[265311][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
Guru Meditation Error: Core  0 panic'ed (LoadProhibited). Exception was unhandled.

Core  0 register dump:
PC      : 0x400d1fa8  PS      : 0x00060d30  A0      : 0x80166194  A1      : 0x3ffcd8b0  
A2      : 0x3ffd891c  A3      : 0x3ffd895c  A4      : 0x0000003f  A5      : 0x0000005c  
A6      : 0x3f412cb8  A7      : 0x3ffcd8ec  A8      : 0x00000000  A9      : 0x3ffcd850  
A10     : 0x3ffdda68  A11     : 0x00000000  A12     : 0x00000000  A13     : 0x00000000  
A14     : 0x3ffb74fc  A15     : 0x00000000  SAR     : 0x00000011  EXCCAUSE: 0x0000001c  
EXCVADDR: 0x00000004  LBEG    : 0x40090319  LEND    : 0x40090329  LCOUNT  : 0xfffffffd  


Backtrace:0x400d1fa5:0x3ffcd8b00x40166191:0x3ffcd8d0 0x40161751:0x3ffcd920 0x401137aa:0x3ffcd970 0x4011413e:0x3ffcd990 0x4010774d:0x3ffcd9e0 0x40109527:0x3ffcda00 




ELF file SHA256: 0000000000000000

Rebooting...
ets Jun  8 2016 00:22:57

rst:0xc (SW_CPU_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:1184
load:0x40078000,len:12776
load:0x40080400,len:3032
entry 0x400805e4
[␀␘␂␂␂��m␑um����2-hal-cpu.c:211] setCpuFrequencyMhz(): PLL: 480 / 2 = 240 Mhz, APB: 80000000 Hz
[    41][I][esp32notifications.cpp:104] begin(): begin()
[   765][V][BLEDevice.cpp:76] createServer(): >> createServer
[   766][V][BLEServer.cpp:290] registerApp(): >> registerApp - 0
[   766][V][FreeRTOS.cpp:189] take(): Semaphore taking: name: RegisterAppEvt (0x3ffce02c), owner: <N/A> for registerApp
[   776][V][FreeRTOS.cpp:198] take(): Semaphore taken:  name: RegisterAppEvt (0x3ffce02c), owner: registerApp
[   786][V][FreeRTOS.cpp:63] wait(): >> wait: Semaphore waiting: name: RegisterAppEvt (0x3ffce02c), owner: registerApp for registerApp
[   787][D][BLEDevice.cpp:102] gattServerEventHandler(): gattServerEventHandler [esp_gatt_if: 4] ... Unknown
[   807][V][BLEUtils.cpp:1530] dumpGattServerEvent(): GATT ServerEvent: Unknown
[   814][V][BLEUtils.cpp:1720] dumpGattServerEvent(): dumpGattServerEvent: *** NOT CODED ***
[   822][V][BLEServer.cpp:144] handleGATTServerEvent(): >> handleGATTServerEvent: Unknown
[   830][V][FreeRTOS.cpp:143] give(): Semaphore giving: name: RegisterAppEvt (0x3ffce02c), owner: registerApp
[   840][V][BLEServer.cpp:280] handleGATTServerEvent(): << handleGATTServerEvent
[   840][V][FreeRTOS.cpp:77] wait(): << wait: Semaphore released: name: RegisterAppEvt (0x3ffce02c), owner: <N/A>
[   857][V][BLEServer.cpp:294] registerApp(): << registerApp
[   862][V][BLEDevice.cpp:83] createServer(): << createServer
[   868][I][esp32notifications.cpp:148] startAdvertising(): startAdvertising()
[   875][I][BLEDevice.cpp:577] getAdvertising(): create advertising
[   880][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[   886][V][BLEAdvertising.cpp:153] setAdvertisementData(): >> setAdvertisementData
[   894][V][BLEAdvertising.cpp:161] setAdvertisementData(): << setAdvertisementData
[   899][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 4 0x04
[   901][V][BLEAdvertising.cpp:187] start(): >> start: customAdvData: 1, customScanResponseData: 0
[   898][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[   918][D][BLEAdvertising.cpp:206] start(): - no services advertised
[   926][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[   932][V][BLEAdvertising.cpp:252] start(): << start
[   939][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[   950][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 4]
[   963][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 1 0x01
[   963][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[   975][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[   981][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[   987][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 1]
[   994][V][BLEUtils.cpp:1817] gapEventToString(): gapEventToString: Unknown event type 6 0x06
[   994][V][BLEUtils.cpp:1049] dumpGapEvent(): Received a GAP event: Unknown event type
[  1010][V][BLEUtils.cpp:1264] dumpGapEvent(): *** dumpGapEvent: Logger not coded ***
[  1017][D][BLEDevice.cpp:579] getAdvertising(): get advertising
[  1023][D][BLEAdvertising.cpp:506] handleGAPEvent(): handleGAPEvent [event no: 6]
